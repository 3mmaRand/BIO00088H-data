---
title: "Independent Study to prepare for workshop"
subtitle: "Omics 3: Visualising and Interpreting"
author: "Emma Rand"
format: 
  revealjs:
    footer: "üîó [About Omics 3: Visualising and Interpreting](https://3mmarand.github.io/BIO00088H-data/omics/week-5/overview.html)"
    slide-number: true
    chalkboard: true
    code-link: true
    code-line-numbers: false
bibliography: ../../references.bib
editor: 
  markdown: 
    wrap: 72
---

```{r}
#| include: false
library(tidyverse)

```


## Overview

In these slides we will:

::: incremental
-   Check where you are

-   learn some concepts used omics visualisation

    -   Principle Component Analysis (PCA)
    -   Volcano plots
    -   Heatmaps

-   Find out what packages to install before the workshop
:::

# Where should you be?

## What we did in Omics 2: Statistical Analysis

::: incremental


-   carried out differential expression analysis

-   found genes not expressed at all, or expressed in one group only

-   Saved results files

:::

## Where should you be?

After the [Omics 2: üëã Statistical Analysis
Workshop](../week-4/workshop.html) including:

-   [ü§ó Look after future
    you!](../week-4/workshop.html#look-after-future-you) and

-   the [Independent Study to
    consolidate](../week-4/study_after_workshop.html), you should have:

## üê∏ Frogs

::: {style="font-size: 70%;"}

-   An RStudio Project called `frogs-88H` which contains:
    -   Raw data (S14, S20 and S30)
    -   Processed data (`s30_filtered.csv`, `s30_summary_gene.csv`,
        `s30_summary_gene_filtered.csv`, `s30_summary_samp.csv` and
        equivalents for S14 *OR* S20)
    -   Results files (`s30_fgf_only.csv`, `S30_normalised_counts.csv`, `S30_results.csv` and
        equivalents for S14 *OR* S20)    
    -   Two scripts called `cont-fgf-s30.R` and either `cont-fgf-s20.R` *OR*
        `cont-fgf-s14.R`
:::

Files should be organised into folders. Code should well commented and
easy to read.

## üê≠ Mice

::: {style="font-size: 70%;"}

-   An RStudio Project called `mice-88H` which contains
    -   Raw data (hspc, prog, lthsc)
    -   Processed data (`hspc_summary_gene.csv`,
        `hspc_summary_samp.csv`, `prog_summary_gene.csv`,
        `prog_summary_samp.csv`, `lthsc_summary_gene.csv`,
        `lthsc_summary_samp.csv`)
-   Results files (`prog_hspc_results.csv` and an equivalent for lthsc vs prog or hspc vs lthsc)
-   Two scripts called `hspc-prog.R` and either `hspc-lthsc.R` *OR*
    `prog-lthsc.R`
:::

Files should be organised into folders. Code should well commented and
easy to read.

## üçÇ

Either of the other examples.

## If you do not have those

Go through:

-   [Omics 2: Statistical Analysis](../week-4/workshop.html) including:

-   [ü§ó Look after future
    you!](../week-4/workshop.html#look-after-future-you) and

-   the [Independent Study to
    consolidate](../week-4/study_after_workshop.html)

# Examine the results files

## Examine the results files

Remind yourself of the key columns you have in the results files:

-   a fold change, logged to base 2
-   an unadjusted p-value
-   a p value adjusted for multiple testing (`FDR` or `padj`)
-   a gene id


## üê∏ Frogs

```{r}
#| echo: false
read_csv("results/s30_results.csv") |> glimpse()

```
-   `baseMean` is the mean of the normalised counts for the gene across
    all samples
-   `lfcSE` standard error of the fold change
-   `stat` is the test statistic (the Wald statistic)




## üê≠ Mice
```{r}
#| echo: false
read_csv("results/prog_hspc_results.csv") |> glimpse()


```

-   Top is the rank of the gene ordered by the p value (smallest first)




# Adding gene information

## Adding gene information

::: incremental

-   The gene id is difficult to interpret in plots/tables

-   Therefore we need to add information such as the gene name and a description to the results

-   For the üê∏ Frog data information comes from xenbase

-   For the üê≠ Mice data information comes from Ensembl 

:::

## üê∏ Xenbase


![xenbase logo](images/Xenbase-Logo-Medium.png){width="800"}


[Xenbase](http://www.xenbase.org/) is a model organism database that provides genomic, molecular, and developmental biology information about *Xenopus laevis* and *Xenopus tropicalis*. 

. . . 

It took me some time to find the information you need.


## üê∏ Xenbase

::: incremental

-   I got the information from the [Xenbase information pages](https://www.xenbase.org/xenbase/static-xenbase/ftpDatafiles.jsp) under Data Reports | Gene Information

-   This is listed:  Xenbase Gene Product Information [readme] [gzipped gpi (tab separated)](https://download.xenbase.org/xenbase/GenePageReports/xenbase.gpi.gz) 

-   Click on the readme link to see the file format and columns  

-   I downloaded [xenbase.gpi.gz](https://download.xenbase.org/xenbase/GenePageReports/xenbase.gpi.gz), unzipped it, removed header lines and the *Xenopus tropicalis* (taxon:8364) entries and saved it as [xenbase_info.xlsx](meta/xenbase_info.xlsx)

-   In the workshop you will merge this information with the results file
:::

## üê≠ Ensembl

::: incremental

-   [Ensembl](https://www.ensembl.org/index.html) creates, integrates and distributes reference datasets and analysis tools that enable genomics 

-   [BioMart](https://grch37.ensembl.org/info/data/biomart/index.html)  provides a access to these large datasets

-   **`biomaRt`** is a Bioconductor package gives you programmatic access to BioMart.

-   In the workshop you use this package to get information you can merge with the results file
:::



# Plots 

## plots purpose

dimsenion reduction

## pca

lots of variables 

## tsne

lots of variables and lots of observations



# normalsing before plotting

## normalising before plotting

log 

normalisation
regularised log is a method to bias from low count genes.
https://hbctraining.github.io/DGE_workshop_salmon_online/lessons/03_DGE_QC_analysis.html



::: incremental
-   T
:::

rlog is a method to bias from low count genes.
https://hbctraining.github.io/DGE_workshop_salmon_online/lessons/03_DGE_QC_analysis.html
gives a good explanation of regularized the log transform (rlog)

The rlog transformation of the normalized counts is only necessary for
these visualization methods during this quality assessment. They are not
used for DE because DESeq2 takes care of that

in the workshop we just to log transformed

-   The üê≠ mouse data have been normalised to simplify the analysis for
    you; the üê∏ frog data have not but the DE method will do this for
    you.
   




## Packages to install before the workshop

**`heatmaply`** **`ggrepel`** from CRAN in the the normal way:

```{r}
#| eval: false

install.packages("heatmaply")
install.packages("ggrepel")

```


**`biomaRt`** from Bioconductor using **`BiocManager`**:
```{r}
#| eval: false
BiocManager::install("biomaRt")
```



# Workshops

## Workshops

-   Omics 1: Hello data Getting to know the data. Checking the
    distributions of values

-   Omics 2: Statistical Analysis Identifying which genes are
    differentially expressed between treatments.

-   Omics 3: Visualising and Interpreting. PCA, Volcano plots and
    heatmaps to visualise results. Interpreting the results and finding
    out more about genes of interest.

## References
