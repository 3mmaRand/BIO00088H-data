---
title: "Independent Study to prepare for workshop"
subtitle: "Omics 3: Visualising and Interpreting"
author: "Emma Rand"
format: 
  revealjs:
    footer: "üîó [About Omics 3: Visualising and Interpreting](https://3mmarand.github.io/BIO00088H-data/omics/week-5/overview.html)"
    slide-number: true
    chalkboard: true
    code-link: true
    code-line-numbers: false
bibliography: ../../references.bib
editor: 
  markdown: 
    wrap: 72
---

## Overview

In these slides we will:

::: incremental
-   Check where you are

-   learn some concepts

    -   

-   Find out what packages to install before the workshop
:::

# Where should you be?

## What we did in Omics 2: Statistical Analysis

::: incremental
::: {style="font-size: 90%;"}
-   

-   

-   Saved files .
:::
:::

## Where should you be?

After the [Omics 2: üëã Statistical Analysis
Workshop](../week-4/workshop.html) including:

-   [ü§ó Look after future
    you!](../week-4/workshop.html#look-after-future-you) and

-   the [Independent Study to
    consolidate](../week-4/study_after_workshop.html), you should have:

## üê∏ Frogs

::: {style="font-size: 90%;"}
-   An RStudio Project called `frogs-88H` which contains:
    -   Raw data (S14, S20 and S30)
    -   Processed data (`s30_filtered.csv`, `s30_summary_gene.csv`,
        `s30_summary_gene_filtered.csv`, `s30_summary_samp.csv` and
        equivalents for S14 *OR* S20)
    -   Two scripts called `cont-fgf-s30.R` and `cont-fgf-s20.R` *OR*
        `cont-fgf-s14.R`
:::

Files should be organised into folders. Code should well commented and
easy to read.

## üê≠ Mice

-   An RStudio Project called `mice-88H` which contains
    -   Raw data (hspc, prog, lthsc)
    -   Processed data (`hspc_summary_gene.csv`,
        `hspc_summary_samp.csv`, `prog_summary_gene.csv`,
        `prog_summary_samp.csv`)
-   One script called `hspc-prog.R`

Files should be organised into folders. Code should well commented and
easy to read.

## üçÇ

Either of the other examples.

## If you do not have those

Go through:

-   [Omics 2: Statistical Analysis](../week-4/workshop.html) including:

-   [ü§ó Look after future
    you!](../week-4/workshop.html#look-after-future-you) and

-   the [Independent Study to
    consolidate](../week-4/study_after_workshop.html)

# Examine the results files

## Examine the results files



# Adding gene information

## from xenbase


![xenbase logo](images/Xenbase-Logo-Medium.png){width="700"}


Xenbase (http://www.xenbase.org/, RRID:SCR_003280)

Xenbase is a model organism database that provides genomic, molecular,
and developmental biology information about Xenopus laevis and Xenopus
tropicalis. Xenbase is funded by the National Institutes of Health
(NIH) and the National Science Foundation (NSF).

our data gives the xenbase gene id so we are using xenbase to get the information
a lot of the information would also be in the ncbi

## from the ncbi

biomart is a package that allows you to get information from the ncbi
database such as gene names and descriptions






# Plots 

## plots purpose

dimsenion reduction

## pca

lots of variables 

## tsne

lots of variables and lots of observations



# normalsing before plotting

## normalising before plotting

log 

normalisation
regularised log is a method to bias from low count genes.
https://hbctraining.github.io/DGE_workshop_salmon_online/lessons/03_DGE_QC_analysis.html



::: incremental
-   T
:::

rlog is a method to bias from low count genes.
https://hbctraining.github.io/DGE_workshop_salmon_online/lessons/03_DGE_QC_analysis.html
gives a good explanation of regularized the log transform (rlog)

The rlog transformation of the normalized counts is only necessary for
these visualization methods during this quality assessment. They are not
used for DE because DESeq2 takes care of that

in the workshop we just to log transformed

-   The üê≠ mouse data have been normalised to simplify the analysis for
    you; the üê∏ frog data have not but the DE method will do this for
    you.
   




## Packages to install before the workshop

**`heatmaply`** **`ggrepel`** from CRAN in the the normal way:

```{r}
#| eval: false

install.packages("heatmaply")
install.packages("ggrepel")

```


**`biomaRt`** from Bioconductor using **`BiocManager`**:
```{r}
#| eval: false
BiocManager::install("biomaRt")
```



# Workshops

## Workshops

-   Omics 1: Hello data Getting to know the data. Checking the
    distributions of values

-   Omics 2: Statistical Analysis Identifying which genes are
    differentially expressed between treatments.

-   Omics 3: Visualising and Interpreting. PCA, Volcano plots and
    heatmaps to visualise results. Interpreting the results and finding
    out more about genes of interest.

## References
